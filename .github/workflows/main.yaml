on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Select os to build'
        required: true
        default: 'ubuntu-2204'
        type: choice
        options:
          - all
          - debian-11
          - debian-12
          - ubuntu-2004
          - ubuntu-2204
          - ubuntu-2404
          - almalinux-8
          - almalinux-9
          - rockylinux-8
          - rockylinux-9
      nvidia_driver:
        description: 'Install NVIDIA driver 
        (should be true to install vGPU driver)
        (Support Ubuntu, RHEL)'
        required: true
        default: false
        type: boolean
      nvidia_version:
        description: 'Select NVIDIA driver version'
        required: false
        default: '570'
        type: choice
        options:
          - 550
          - 560
          - 570
      nvidia_vgpu_driver:
        description: 'Install NVIDIA vGPU Driver'
        required: true
        default: false
        type: boolean
      jupyter:
        description: 'Install Jupyter Lab'
        required: true
        default: false
        type: boolean
      ansible:
        description: 'Install Ansible'
        required: true
        default: false
        type: boolean
jobs:
  build-debian-11-amd64:
    runs-on:
      - self-hosted
      - linux
      - x64
    if: ${{ (github.event.inputs.os == 'debian-11' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-debian-11

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD debian-11.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/debian-11-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/debian-11-container-disk:${{ env.tag }}

      - name: Create container image manifests
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/debian-11-container-disk:latest \
            quay.io/edgestack/debian-11-container-disk:aarch64 \
            quay.io/edgestack/debian-11-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/debian-11-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/debian-11-container-disk:latest

  build-debian-12-amd64:
    if: ${{ (github.event.inputs.os == 'debian-12' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-debian-12

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD debian-12.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/debian-12-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/debian-12-container-disk:${{ env.tag }}

      - name: Create container image manifests
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/debian-12-container-disk:latest \
            quay.io/edgestack/debian-12-container-disk:aarch64 \
            quay.io/edgestack/debian-12-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/debian-12-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/debian-12-container-disk:latest

  build-ubuntu-1804-amd64:
    if: ${{ (github.event.inputs.os == 'ubuntu-1804' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-ubuntu-1804

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD ubuntu-1804.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/ubuntu-1804-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/ubuntu-1804-container-disk:${{ env.tag }}${{ env.tag }}
      - name: Create container image manifests
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/ubuntu-1804-container-disk:latest \
            quay.io/edgestack/ubuntu-1804-container-disk:aarch64 \
            quay.io/edgestack/ubuntu-1804-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/ubuntu-1804-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/ubuntu-1804-container-disk:latest

  build-ubuntu-2004-amd64:
    if: ${{ github.event.inputs.os == 'ubuntu-2004' || github.event.inputs.os == 'all' }}
    runs-on:
      - self-hosted
      - linux
      - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.nvidia_vgpu_driver = "${{ github.event.inputs.nvidia_vgpu_driver }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-ubuntu-2004

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD ubuntu-2004.qcow2 /disk/
          EOF
          
      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/ubuntu-2004-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/ubuntu-2004-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/ubuntu-2004-container-disk:latest \
            quay.io/edgestack/ubuntu-2004-container-disk:aarch64 \
            quay.io/edgestack/ubuntu-2004-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/ubuntu-2004-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/ubuntu-2004-container-disk:latest

  build-ubuntu-2204-amd64:
    if: ${{ github.event.inputs.os == 'ubuntu-2204' || github.event.inputs.os == 'all' }}
    runs-on:
      - self-hosted
      - linux
      - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.nvidia_vgpu_driver = "${{ github.event.inputs.nvidia_vgpu_driver }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-ubuntu-2204

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD ubuntu-2204.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/ubuntu-2204-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/ubuntu-2204-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/ubuntu-2204-container-disk:latest \
            quay.io/edgestack/ubuntu-2204-container-disk:aarch64 \
            quay.io/edgestack/ubuntu-2204-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/ubuntu-2204-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/ubuntu-2204-container-disk:latest

  build-ubuntu-2404-amd64:
    if: ${{ github.event.inputs.os == 'ubuntu-2404' || github.event.inputs.os == 'all' }}
    runs-on:
      - self-hosted
      - linux
      - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.nvidia_vgpu_driver = "${{ github.event.inputs.nvidia_vgpu_driver }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-ubuntu-2404

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD ubuntu-2404.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/ubuntu-2404-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/ubuntu-2404-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/ubuntu-2404-container-disk:latest \
            quay.io/edgestack/ubuntu-2404-container-disk:aarch64 \
            quay.io/edgestack/ubuntu-2404-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/ubuntu-2404-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/ubuntu-2404-container-disk:latest

  build-almalinux-8-amd64:
    if: ${{ github.event.inputs.os == 'almalinux-8' || github.event.inputs.os == 'all' }}
    runs-on:
      - self-hosted
      - linux
      - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.nvidia_vgpu_driver = "${{ github.event.inputs.nvidia_vgpu_driver }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-alma-8

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD alma-8.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/almalinux-8-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/almalinux-8-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/almalinux-8-container-disk:latest \
            quay.io/edgestack/almalinux-8-container-disk:aarch64 \
            quay.io/edgestack/almalinux-8-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/almalinux-8-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/almalinux-8-container-disk:latest

  build-almalinux-9-amd64:
    if: ${{ github.event.inputs.os == 'almalinux-9' || github.event.inputs.os == 'all' }}
    runs-on:
      - self-hosted
      - linux
      - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.nvidia_vgpu_driver = "${{ github.event.inputs.nvidia_vgpu_driver }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-alma-9

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD alma-9.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/almalinux-9-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/almalinux-9-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/almalinux-9-container-disk:latest \
            quay.io/edgestack/almalinux-9-container-disk:aarch64 \
            quay.io/edgestack/almalinux-9-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/almalinux-9-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/almalinux-9-container-disk:latest

  build-rockylinux-8-amd64:
    if: ${{ (github.event.inputs.os == 'rockylinux-8' || github.event.inputs.os == 'all') }}
    runs-on:
      - self-hosted
      - linux
      - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.nvidia_vgpu_driver = "${{ github.event.inputs.nvidia_vgpu_driver }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-rocky-8-uefi

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD rocky-8.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/rocky-8-uefi-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/rocky-8-uefi-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/rocky-8-uefi-container-disk:latest \
            quay.io/edgestack/rocky-8-uefi-container-disk:aarch64 \
            quay.io/edgestack/rocky-8-uefi-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/rocky-8-uefi-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/rocky-8-uefi-container-disk:latest

  build-rockylinux-9-amd64:
    if: ${{ (github.event.inputs.os == 'rockylinux-9' || github.event.inputs.os == 'all') }}
    runs-on:
      - self-hosted
      - linux
      - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.nvidia_vgpu_driver = "${{ github.event.inputs.nvidia_vgpu_driver }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-rocky-9-uefi

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD rocky-9.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="x86_64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/rocky-9-uefi-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/rocky-9-uefi-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/rocky-9-uefi-container-disk:latest \
            quay.io/edgestack/rocky-9-uefi-container-disk:aarch64 \
            quay.io/edgestack/rocky-9-uefi-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/rocky-9-uefi-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/rocky-9-uefi-container-disk:latest

  build-debian-11-arm64:
    if: ${{ (github.event.inputs.os == 'debian-11' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-debian-11-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD debian-11.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/debian-11-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/debian-11-container-disk:${{ env.tag }}

      - name: Create container image manifests
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/debian-11-container-disk:latest \
            quay.io/edgestack/debian-11-container-disk:aarch64 \
            quay.io/edgestack/debian-11-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/debian-11-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/debian-11-container-disk:latest

  build-debian-12-arm64:
    if: ${{ (github.event.inputs.os == 'debian-12' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-debian-12-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD debian-12.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/debian-12-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/debian-12-container-disk:${{ env.tag }}

      - name: Create container image manifests
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/debian-12-container-disk:latest \
            quay.io/edgestack/debian-12-container-disk:aarch64 \
            quay.io/edgestack/debian-12-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/debian-12-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/debian-12-container-disk:latest

  build-ubuntu-1804-arm64:
    if: ${{ (github.event.inputs.os == 'ubuntu-1804' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-ubuntu-1804-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD ubuntu-1804.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/ubuntu-1804-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/ubuntu-1804-container-disk:${{ env.tag }}

      - name: Create container image manifests
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/ubuntu-1804-container-disk:latest \
            quay.io/edgestack/ubuntu-1804-container-disk:aarch64 \
            quay.io/edgestack/ubuntu-1804-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/ubuntu-1804-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/ubuntu-1804-container-disk:latest


  build-ubuntu-2004-arm64:
    if: ${{ (github.event.inputs.os == 'ubuntu-2004' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_vgpu_driver == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-ubuntu-2004-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD ubuntu-2004.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/ubuntu-2004-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/ubuntu-2004-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/ubuntu-2004-container-disk:latest \
            quay.io/edgestack/ubuntu-2004-container-disk:aarch64 \
            quay.io/edgestack/ubuntu-2004-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/ubuntu-2004-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/ubuntu-2004-container-disk:latest

  build-ubuntu-2204-arm64:
    if: ${{ (github.event.inputs.os == 'ubuntu-2204' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_vgpu_driver == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-ubuntu-2204-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD ubuntu-2204.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/ubuntu-2204-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/ubuntu-2204-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/ubuntu-2204-container-disk:latest \
            quay.io/edgestack/ubuntu-2204-container-disk:aarch64 \
            quay.io/edgestack/ubuntu-2204-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/ubuntu-2204-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/ubuntu-2204-container-disk:latest

  build-ubuntu-2404-arm64:
    if: ${{ (github.event.inputs.os == 'ubuntu-2404' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_vgpu_driver == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-ubuntu-2404-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD ubuntu-2404.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/ubuntu-2404-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/ubuntu-2404-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/ubuntu-2404-container-disk:latest \
            quay.io/edgestack/ubuntu-2404-container-disk:aarch64 \
            quay.io/edgestack/ubuntu-2404-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/ubuntu-2404-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/ubuntu-2404-container-disk:latest

  build-almalinux-8-arm64:
    if: ${{ (github.event.inputs.os == 'almalinux-8' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_vgpu_driver == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-alma-8-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD alma-8.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/almalinux-8-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/almalinux-8-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/almalinux-8-container-disk:latest \
            quay.io/edgestack/almalinux-8-container-disk:aarch64 \
            quay.io/edgestack/almalinux-8-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/almalinux-8-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/almalinux-8-container-disk:latest


  build-almalinux-9-arm64:
    if: ${{ (github.event.inputs.os == 'almalinux-9' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_vgpu_driver == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-alma-9-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD alma-9.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/almalinux-9-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/almalinux-9-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/almalinux-9-container-disk:latest \
            quay.io/edgestack/almalinux-9-container-disk:aarch64 \
            quay.io/edgestack/almalinux-9-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/almalinux-9-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/almalinux-9-container-disk:latest

  build-rockylinux-8-arm64:
    if: ${{ (github.event.inputs.os == 'rockylinux-8' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_vgpu_driver == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-rocky-8-uefi-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD rocky-8.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/rocky-8-uefi-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/rocky-8-uefi-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/rocky-8-uefi-container-disk:latest \
            quay.io/edgestack/rocky-8-uefi-container-disk:aarch64 \
            quay.io/edgestack/rocky-8-uefi-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/rocky-8-uefi-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/rocky-8-uefi-container-disk:latest

  build-rockylinux-9-arm64:
    if: ${{ (github.event.inputs.os == 'rockylinux-9' || github.event.inputs.os == 'all') && github.event.inputs.nvidia_vgpu_driver == 'false' }}
    runs-on:
      - self-hosted
      - linux
      - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Ansible package options
        run: |
          jq \
            '.variables.ansible = "${{ github.event.inputs.ansible }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Update Nvidia package options
        run: |
          jq \
            '.variables.nvidia_driver = "${{ github.event.inputs.nvidia_driver }}" | .variables.nvidia_version = "${{ github.event.inputs.nvidia_version }}" | .variables.jupyter = "${{ github.event.inputs.jupyter }}"' \
            packer/qemu/packer.json > tmp.json
          mv tmp.json packer/qemu/packer.json

      - name: Activate virtualenv
        run: |
          . /home/rocky/.venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Build image
        run: make build-qemu-rocky-9-uefi-aarch64

      - name: Create Dockerfile
        run: |
          cat << EOF > output/Dockerfile
          FROM alpine
          ADD rocky-9.qcow2 /disk/
          EOF

      - name: Set tag variable based on inputs
        id: set_tag
        run: |
          tag="aarch64"
          if [ "${{ github.event.inputs.jupyter }}" == "true" ]; then
            tag="jupyter_${tag}"
          fi
          if [ "${{ github.event.inputs.ansible }}" == "true" ]; then
            tag="ansible_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_vgpu_driver }}" == "true" ]; then
            tag="vgpu_${tag}"
          fi
          if [ "${{ github.event.inputs.nvidia_driver }}" == "true" ]; then
            tag="nvidia_${{ github.event.inputs.nvidia_version }}_${tag}"
          fi
          echo "tag=${tag}" >> $GITHUB_ENV

      - name: Build & push container image
        run: |
          sudo docker build --tag quay.io/edgestack/rocky-9-uefi-container-disk:${{ env.tag }} output
          sudo docker login quay.io/edgestack -u ${{ secrets.QUAY_USER_NAME }} -p ${{ secrets.QUAY_PASSWORD }}
          sudo docker push quay.io/edgestack/rocky-9-uefi-container-disk:${{ env.tag }}

      - name: Create container image manifests
        if: ${{ github.event.inputs.nvidia_driver == 'false' && github.event.inputs.jupyter == 'false' }}
        continue-on-error: true
        run: |
          sudo docker manifest create quay.io/edgestack/rocky-9-uefi-container-disk:latest \
            quay.io/edgestack/rocky-9-uefi-container-disk:aarch64 \
            quay.io/edgestack/rocky-9-uefi-container-disk:x86_64 --amend
          sudo docker manifest push quay.io/edgestack/rocky-9-uefi-container-disk:latest --format v2s2
          sudo docker manifest rm quay.io/edgestack/rocky-9-uefi-container-disk:latest
